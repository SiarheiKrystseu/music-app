# to start 2 song services, use the command:
# docker-compose up --scale song-service=2
version: "3.9"
services:
  resource-service:
    build:
      context: ./resource-service
      dockerfile: Dockerfile
    environment:
      SPRING_APPLICATION_NAME: "${RESOURCE_SERVICE_NAME}"
      SERVER_PORT: "${RESOURCE_SERVICE_PORT}"
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: "${EUREKA_CLIENT_SERVICEURL}"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://resources-db:5432/${POSTGRES_DB_RESOURCES}"
      SPRING_DATASOURCE_USERNAME: "${POSTGRES_USER_RESOURCES}"
      SPRING_DATASOURCE_PASSWORD: "${POSTGRES_PASSWORD_RESOURCES}"
      LOCAL_RESOURCES_PATH: "/resources"
    depends_on:
      - discovery-server
      - resources-db
    networks:
      - app-network

  song-service:
    build:
      context: ./song-service
      dockerfile: Dockerfile
    environment:
      SPRING_APPLICATION_NAME: "${SONG_SERVICE_NAME}"
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: "${EUREKA_CLIENT_SERVICEURL}"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://songs-db:5432/${POSTGRES_DB_SONGS}"
      SPRING_DATASOURCE_USERNAME: "${POSTGRES_USER_SONGS}"
      SPRING_DATASOURCE_PASSWORD: "${POSTGRES_PASSWORD_SONGS}"
    command: ["java", "-jar", "song-service.jar", "--server.port=0"]
    depends_on:
      - discovery-server
      - songs-db
    networks:
      - app-network

  discovery-server:
    build: ./discovery-server
    ports:
      - "${EUREKA_SERVER_PORT}:${EUREKA_SERVER_PORT}"
    environment:
      SPRING_APPLICATION_NAME: "${DISCOVERY_SERVICE_NAME}"
      SERVER_PORT: "${EUREKA_SERVER_PORT}"
    depends_on:
      - resources-db
      - songs-db
    networks:
      - app-network

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    environment:
      SPRING_APPLICATION_NAME: "${API_GATEWAY_NAME}"
      SERVER_PORT: "${API_GATEWAY_PORT}"
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: "${EUREKA_CLIENT_SERVICEURL}"
    command: ["java", "-jar", "api-gateway.jar"]
    depends_on:
      - discovery-server
    networks:
      - app-network

  resources-db:
    image: postgres:14-alpine
    ports:
      - "${POSTGRES_PORT_RESOURCES}:5432"
    environment:
      POSTGRES_USER: "${POSTGRES_USER_RESOURCES}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD_RESOURCES}"
      POSTGRES_DB: "${POSTGRES_DB_RESOURCES}"
    volumes:
      - ./db/init-resources.sql:/docker-entrypoint-initdb.d/init-resources.sql
      - ./resources:/resources
    networks:
      - app-network

  songs-db:
    image: postgres:14-alpine
    ports:
      - "${POSTGRES_PORT_SONGS}:5432"
    environment:
      POSTGRES_USER: "${POSTGRES_USER_SONGS}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD_SONGS}"
      POSTGRES_DB: "${POSTGRES_DB_SONGS}"
    volumes:
      - ./db/init-songs.sql:/docker-entrypoint-initdb.d/init-songs.sql
      - ./resources:/resources
    networks:
      - app-network

networks:
  app-network:
    driver: bridge